---
apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerTemplate
metadata:
  name: mlflow-triggertemplate
  namespace: carrier-workloads
spec:
  params:
    - name: gitrevision
      description: The git revision
      default: main
    - name: gitrepositoryurl
      description: The git repository url
    - name: namespace
      description: The namespace to create the resources
    - name: appname
      description: Name of the app to stage/run
  resourcetemplates:
    - apiVersion: tekton.dev/v1beta1
      kind: PipelineRun
      metadata:
        name: mlflow-pipeline-run-$(tt.params.appname)-$(uid)
      spec:
        serviceAccountName: staging-triggers-admin
        serviceAccountNames:
        - taskName: train
          serviceAccountName: carrier-workloads
        pipelineRef:
          name: mlflow-pipeline
        workspaces:
        - name: source
          volumeClaimTemplate:
            spec:
              accessModes:
                - ReadWriteOnce
              resources:
                requests:
                  storage: 2Gi
        params:
        - name: image
          value: registry.carrier-registry/apps/$(tt.params.appname)
        - name: appname
          value: $(tt.params.appname)
        resources:
        - name: source-repo
          resourceSpec:
            type: git
            params:
            - name: revision
              value: $(tt.params.gitrevision)
            - name: url
              value: $(tt.params.gitrepositoryurl)

---
apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerBinding
metadata:
  name: mlflow-pipelinebinding
  namespace: carrier-workloads
spec:
  params:
    - name: gitrevision
      value: $(body.head_commit.id)
    - name: namespace
      value: carrier-workloads
    - name: gitrepositoryurl
      value: "http://gitea-http.gitea:10080/$(body.repository.full_name)"
    - name: appname
      value: "$(body.repository.name)"

---
apiVersion: triggers.tekton.dev/v1alpha1
kind: EventListener
metadata:
  name: mlflow-listener
  namespace: carrier-workloads
spec:
  serviceAccountName: staging-triggers-admin
  triggers:
    - bindings:
      - ref: mlflow-pipelinebinding
      template:
        ref: mlflow-triggertemplate

---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: mlflow-pipeline
  namespace: carrier-workloads
spec:
  workspaces:
  - name: source
  params:
  - name: image
  - name: appname
  resources:
  - name: source-repo
    type: git
  tasks:
  - name: clone
    taskRef:
      name: clone
    resources:
      inputs:
      - name: source-repo
        resource: source-repo
    workspaces:
    - name: source
      workspace: source
  - name: build
    taskRef:
      name: kaniko
    runAfter:
    - clone
    params:
    - name: BUILDER_IMAGE
      value: "gcr.io/kaniko-project/executor:v1.5.1"
    - name: IMAGE
      value: $(params.image)
    - NAME: DOCKERFILE
      value: "app/.fuseml/Dockerfile"
    - name: CONTEXT
      value: app
    - name: EXTRA_ARGS
      value: "--skip-tls-verify"
    workspaces:
    - name: source
      workspace: source
  - name: train
    taskRef:
      name: train
    runAfter:
    - build
    params:
    - name: IMAGE
      value: "127.0.0.1:30500/apps/$(params.appname)@$(tasks.build.results.IMAGE-DIGEST)"
    - name: EXPERIMENT_NAME
      value: $(params.appname)
    workspaces:
    - name: source
      workspace: source
  - name: serve
    taskRef:
      name: serve
    runAfter:
    - train
    params:
    - name: IMAGE-SHA
      value: $(tasks.build.results.IMAGE-DIGEST)
    - name: RUN-ID
      value: $(tasks.train.results.RUN-ID)
    workspaces:
    - name: source
      workspace: source

---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: clone
  namespace: carrier-workloads
spec:
  workspaces:
  - name: source
  resources:
    inputs:
    - name: source-repo
      type: git
      targetPath: source/app
  steps:
  - name: stage
    image: lachlanevenson/k8s-kubectl
    workingDir: "/workspace/source/app"
    script: |
      pwd
      ls -la

---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: train
  namespace: carrier-workloads
spec:
  params:
  - name: IMAGE
    description: Name (reference) of the image to run
  - name: EXPERIMENT_NAME
    description: Name of experiment
  workspaces:
  - name: source
  results:
  - name: RUN-ID
    description: ID of the training execution.
  steps:
  - name: run
    image: $(params.IMAGE)
    workingDir: "/workspace/source/app"
    script: |
      mlflow run --no-conda --experiment-name $(params.EXPERIMENT_NAME) . 2>&1 | tee train.log
    env:
    - name: MLFLOW_TRACKING_URI
      value: "http://mlflow"
    - name: MLFLOW_S3_ENDPOINT_URL
      value: "http://mlflow-minio:9000"
    - name: AWS_ACCESS_KEY_ID
      valueFrom:
        secretKeyRef:
          name: mlflow-minio
          key: accesskey
    - name: AWS_SECRET_ACCESS_KEY
      valueFrom:
        secretKeyRef:
          name: mlflow-minio
          key: secretkey
  - name: run-id-to-results
    image: $(params.IMAGE)
    workingDir: "/workspace/source/app"
    script: |
      grep -oEm1 '[a-f0-9]{32}' train.log | tr -d '\n' | tee $(results.RUN-ID.path)

---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: serve
  namespace: carrier-workloads
spec:
  params:
  - name: IMAGE-SHA
  - name: RUN-ID
  workspaces:
  - name: source
  steps:
  - name: run
    image: lachlanevenson/k8s-kubectl
    workingDir: "/workspace/source/app"
    script: |
      sed "s/#RUN_ID#/$(params.RUN-ID)/g; s/#IMAGE_SHA#/$(params.IMAGE-SHA)/g" .fuseml/serve.yaml | kubectl apply -f -
